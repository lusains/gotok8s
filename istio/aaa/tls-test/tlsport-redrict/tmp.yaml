kind: EnvoyFilter
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: test-service-grid-d-transport
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      app-name: test-service-grid-d
  configPatches:
    - applyTo: FILTER_CHAIN
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 15006
      patch:
        operation: INSERT_FIRST
        value:
          filter_chain_match:
            destination_port: 18443
            transport_protocol: tls
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                '@type': >-
                  type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      '@type': >-
                        type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        json_format:
                          authority: '%REQ(:AUTHORITY)%'
                          bytes_received: '%BYTES_RECEIVED%'
                          bytes_sent: '%BYTES_SENT%'
                          connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'
                          downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'
                          downstream_remote_address: '%DOWNSTREAM_REMOTE_ADDRESS%'
                          downstream_tls_version: '%DOWNSTREAM_TLS_VERSION%'
                          duration: '%DURATION%'
                          method: '%REQ(:METHOD)%'
                          path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                          protocol: '%PROTOCOL%'
                          request_id: '%REQ(X-REQUEST-ID)%'
                          requested_server_name: '%REQUESTED_SERVER_NAME%'
                          response_code: '%RESPONSE_CODE%'
                          response_code_details: '%RESPONSE_CODE_DETAILS%'
                          response_flags: '%RESPONSE_FLAGS%'
                          route_name: '%ROUTE_NAME%'
                          start_time: '%START_TIME%'
                          upstream_cluster: '%UPSTREAM_CLUSTER%'
                          upstream_host: '%UPSTREAM_HOST%'
                          upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'
                          upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                          upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'
                          user_agent: '%REQ(USER-AGENT)%'
                          x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                      path: /dev/stdout
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: inbound|8080||
                  validate_clusters: false
                  virtual_hosts:
                    - domains:
                        - '*'
                      name: inbound|http|8080
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: inbound|8080||
                            timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                          name: default
                      validate_clusters: false
                stat_prefix: inbound_0.0.0.0_8080
              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              http2_protocol_options:
                max_concurrent_streams: 1000
                max_outbound_frames: 1000
                stream_error_on_invalid_http_messaging: true
              server_name: istio-envoy
              use_remote_address: false
              forward_client_cert_details: APPEND_FORWARD
              set_current_client_cert_details:
                subject: true
                dns: true
                uri: true
              upgrade_configs:
                - upgrade_type: websocket
              stream_idle_timeout: 0s
              normalize_path: true
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': >-
                type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - http/1.0
                  - http/1.1
                  - h2
                  - http/2
                tls_certificate_sds_secret_configs:
                  - name: default
                    sds_config:
                      api_config_source:
                        api_type: GRPC
                        grpc_services:
                          - envoy_grpc:
                              cluster_name: sds-grpc
                        set_node_on_first_message_only: true
                        transport_api_version: V3
                      initial_fetch_timeout: 0s
                      resource_api_version: V3
                validation_context_sds_secret_config:
                  name: ROOTCA
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                        - envoy_grpc:
                            cluster_name: sds-grpc
                      set_node_on_first_message_only: true
                      transport_api_version: V3
                    initial_fetch_timeout: 0s
                    resource_api_version: V3
              require_client_certificate: true
    - applyTo: FILTER_CHAIN
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 15006
      patch:
        operation: INSERT_FIRST
        value:
          filter_chain_match:
            destination_port: 19443
            transport_protocol: tls
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                '@type': >-
                  type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      '@type': >-
                        type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        json_format:
                          authority: '%REQ(:AUTHORITY)%'
                          bytes_received: '%BYTES_RECEIVED%'
                          bytes_sent: '%BYTES_SENT%'
                          connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'
                          downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'
                          downstream_remote_address: '%DOWNSTREAM_REMOTE_ADDRESS%'
                          downstream_tls_version: '%DOWNSTREAM_TLS_VERSION%'
                          duration: '%DURATION%'
                          method: '%REQ(:METHOD)%'
                          path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                          protocol: '%PROTOCOL%'
                          request_id: '%REQ(X-REQUEST-ID)%'
                          requested_server_name: '%REQUESTED_SERVER_NAME%'
                          response_code: '%RESPONSE_CODE%'
                          response_code_details: '%RESPONSE_CODE_DETAILS%'
                          response_flags: '%RESPONSE_FLAGS%'
                          route_name: '%ROUTE_NAME%'
                          start_time: '%START_TIME%'
                          upstream_cluster: '%UPSTREAM_CLUSTER%'
                          upstream_host: '%UPSTREAM_HOST%'
                          upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'
                          upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                          upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'
                          user_agent: '%REQ(USER-AGENT)%'
                          x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                      path: /dev/stdout
                http_filters:
                  - name: envoy.filters.http.router
                route_config:
                  name: inbound|grpc
                  validate_clusters: false
                  virtual_hosts:
                    - domains:
                        - '*'
                      name: inbound|grpc
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: local_grpc
                            name: default
                stat_prefix: inbound_0.0.0.0_19443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': >-
                type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - http/1.0
                  - http/1.1
                  - h2
                  - http/2
                tls_certificate_sds_secret_configs:
                  - name: default
                    sds_config:
                      api_config_source:
                        api_type: GRPC
                        grpc_services:
                          - envoy_grpc:
                              cluster_name: sds-grpc
                        set_node_on_first_message_only: true
                        transport_api_version: V3
                      initial_fetch_timeout: 0s
                      resource_api_version: V3
                validation_context_sds_secret_config:
                  name: ROOTCA
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                        - envoy_grpc:
                            cluster_name: sds-grpc
                      set_node_on_first_message_only: true
                      transport_api_version: V3
                    initial_fetch_timeout: 0s
                    resource_api_version: V3
              require_client_certificate: true
    - applyTo: CLUSTER
      patch:
        operation: ADD
        value:
          connect_timeout: 0.25s
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: local_grpc
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 9090
          name: local_grpc
          type: LOGICAL_DNS
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': >-
                type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
{
  "filter_chain_match": {
    "application_protocols": [
      "istio",
      "istio-peer-exchange",
      "istio-http/1.0",
      "istio-http/1.1",
      "istio-h2"
    ],
    "destination_port": 8080,
    "transport_protocol": "tls"
  },
  "filters": [
    {
      "name": "istio.metadata_exchange",
      "typed_config": {
        "@type": "type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange",
        "protocol": "istio-peer-exchange"
      }
    },
    {
      "name": "envoy.filters.network.http_connection_manager",
      "typed_config": {
        "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
        "access_log": [
          {
            "filter": {
              "extension_filter": {
                "name": "envoy.access_loggers.extension_filters.cel",
                "typed_config": {
                  "@type": "type.googleapis.com/envoy.extensions.access_loggers.filters.cel.v3.ExpressionFilter",
                  "expression": "!(request.url_path == \"/actuator/health\" || request.url_path == \"/misc/ping\")"
                }
              }
            },
            "name": "envoy.access_loggers.file",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog",
              "log_format": {
                "json_format": {
                  "authority": "%REQ(:AUTHORITY)%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "bytes_sent": "%BYTES_SENT%",
                  "connection_termination_details": "%CONNECTION_TERMINATION_DETAILS%",
                  "downstream_local_address": "%DOWNSTREAM_LOCAL_ADDRESS%",
                  "downstream_remote_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
                  "duration": "%DURATION%",
                  "method": "%REQ(:METHOD)%",
                  "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
                  "protocol": "%PROTOCOL%",
                  "request_id": "%REQ(X-REQUEST-ID)%",
                  "requested_server_name": "%REQUESTED_SERVER_NAME%",
                  "response_code": "%RESPONSE_CODE%",
                  "response_code_details": "%RESPONSE_CODE_DETAILS%",
                  "response_flags": "%RESPONSE_FLAGS%",
                  "route_name": "%ROUTE_NAME%",
                  "start_time": "%START_TIME%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%",
                  "upstream_host": "%UPSTREAM_HOST%",
                  "upstream_local_address": "%UPSTREAM_LOCAL_ADDRESS%",
                  "upstream_service_time": "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%",
                  "upstream_transport_failure_reason": "%UPSTREAM_TRANSPORT_FAILURE_REASON%",
                  "user_agent": "%REQ(USER-AGENT)%",
                  "x_forwarded_for": "%REQ(X-FORWARDED-FOR)%"
                }
              },
              "path": "/dev/stdout"
            }
          },
          {
            "name": "envoy.access_loggers.file",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog",
              "log_format": {
                "json_format": {
                  "authority": "%REQ(:authority)%",
                  "bytes_received": "%BYTES_RECEIVED%",
                  "bytes_sent": "%BYTES_SENT%",
                  "downstream_tls_version": "%DOWNSTREAM_TLS_VERSION%",
                  "duration": "%DURATION%",
                  "method": "%REQ(:METHOD)%",
                  "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
                  "protocol": "%PROTOCOL%",
                  "request_id": "%REQ(x-request-id)%",
                  "response_code": "%RESPONSE_CODE%",
                  "response_flags": "%RESPONSE_FLAGS%",
                  "start_time": "%START_TIME%",
                  "upstream_cluster": "%UPSTREAM_CLUSTER%",
                  "upstream_host": "%UPSTREAM_HOST%",
                  "upstream_service_time": "%RESP(x-envoy-upstream-service-time)%",
                  "user_agent": "%REQ(user-agent)%",
                  "x_forwarded_for": "%REQ(x-forwarded-for)%"
                }
              }
            }
          }
        ],
        "forward_client_cert_details": "APPEND_FORWARD",
        "http_filters": [
          {
            "name": "istio.metadata_exchange",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
              "config": {
                "configuration": {
                  "@type": "type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange"
                },
                "vm_config": {
                  "code": {
                    "local": {
                      "inline_string": "envoy.wasm.metadata_exchange"
                    }
                  },
                  "runtime": "envoy.wasm.runtime.null"
                }
              }
            }
          },
          {
            "name": "envoy.filters.http.rbac",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC",
              "rules": {
                "action": "DENY",
                "policies": {
                  "ns[istio-system]-policy[test-service-grid-d]-rule[0]": {
                    "permissions": [
                      {
                        "and_rules": {
                          "rules": [
                            {
                              "not_rule": {
                                "or_rules": {
                                  "rules": [
                                    {
                                      "header": {
                                        "name": ":method",
                                        "present_match": true
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "not_rule": {
                                "or_rules": {
                                  "rules": [
                                    {
                                      "url_path": {
                                        "path": {
                                          "exact": "/ip"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "principals": [
                      {
                        "and_ids": {
                          "ids": [
                            {
                              "or_ids": {
                                "ids": [
                                  {
                                    "authenticated": {
                                      "principal_name": {
                                        "safe_regex": {
                                          "google_re2": {},
                                          "regex": "spiffe://.*/sa/test-service-grid-c"
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              "shadow_rules_stat_prefix": "istio_dry_run_allow_"
            }
          },
          {
            "name": "envoy.filters.http.fault",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault"
            }
          },
          {
            "name": "envoy.filters.http.cors",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors"
            }
          },
          {
            "name": "istio.stats",
            "typed_config": {
              "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
              "type_url": "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm",
              "value": {
                "config": {
                  "configuration": {
                    "@type": "type.googleapis.com/google.protobuf.StringValue",
                    "value": "{\n  \"debug\": \"false\",\n  \"stat_prefix\": \"istio\",\n  \"disable_host_header_fallback\": true\n}\n"
                  },
                  "root_id": "stats_inbound",
                  "vm_config": {
                    "code": {
                      "local": {
                        "inline_string": "envoy.wasm.stats"
                      }
                    },
                    "runtime": "envoy.wasm.runtime.null",
                    "vm_id": "stats_inbound"
                  }
                }
              }
            }
          },
          {
            "name": "envoy.filters.http.lane",
            "typed_config": {
              "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
              "type_url": "type.googleapis.com/lane.Decoder",
              "value": {
                "routeheader": "x-gotok8s-color",
                "traceheader": "traceparent",
                "type": "W3C_TRACE_CONTEXT"
              }
            }
          },
          {
            "name": "envoy.filters.http.router",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
            }
          }
        ],
        "normalize_path": true,
        "path_with_escaped_slashes_action": "KEEP_UNCHANGED",
        "request_id_extension": {
          "typed_config": {
            "@type": "type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig",
            "use_request_id_for_trace_sampling": true
          }
        },
        "route_config": {
          "name": "inbound|8080||",
          "validate_clusters": false,
          "virtual_hosts": [
            {
              "domains": [
                "*"
              ],
              "name": "inbound|http|8080",
              "routes": [
                {
                  "decorator": {
                    "operation": "test-service-grid-d.develop.svc.cluster.local:8080/*"
                  },
                  "match": {
                    "prefix": "/"
                  },
                  "name": "default",
                  "route": {
                    "cluster": "inbound|8080||",
                    "max_stream_duration": {
                      "grpc_timeout_header_max": "0s",
                      "max_stream_duration": "0s"
                    },
                    "timeout": "0s"
                  }
                }
              ]
            }
          ]
        },
        "server_name": "istio-envoy",
        "set_current_client_cert_details": {
          "dns": true,
          "subject": true,
          "uri": true
        },
        "stat_prefix": "inbound_0.0.0.0_8080",
        "stream_idle_timeout": "0s",
        "tracing": {
          "client_sampling": {
            "value": 100
          },
          "custom_tags": [
            {
              "metadata": {
                "kind": {
                  "request": {}
                },
                "metadata_key": {
                  "key": "envoy.filters.http.rbac",
                  "path": [
                    {
                      "key": "istio_dry_run_allow_shadow_effective_policy_id"
                    }
                  ]
                }
              },
              "tag": "istio.authorization.dry_run.allow_policy.name"
            },
            {
              "metadata": {
                "kind": {
                  "request": {}
                },
                "metadata_key": {
                  "key": "envoy.filters.http.rbac",
                  "path": [
                    {
                      "key": "istio_dry_run_allow_shadow_engine_result"
                    }
                  ]
                }
              },
              "tag": "istio.authorization.dry_run.allow_policy.result"
            },
            {
              "metadata": {
                "kind": {
                  "request": {}
                },
                "metadata_key": {
                  "key": "envoy.filters.http.rbac",
                  "path": [
                    {
                      "key": "istio_dry_run_deny_shadow_effective_policy_id"
                    }
                  ]
                }
              },
              "tag": "istio.authorization.dry_run.deny_policy.name"
            },
            {
              "metadata": {
                "kind": {
                  "request": {}
                },
                "metadata_key": {
                  "key": "envoy.filters.http.rbac",
                  "path": [
                    {
                      "key": "istio_dry_run_deny_shadow_engine_result"
                    }
                  ]
                }
              },
              "tag": "istio.authorization.dry_run.deny_policy.result"
            },
            {
              "literal": {
                "value": "latest"
              },
              "tag": "istio.canonical_revision"
            },
            {
              "literal": {
                "value": "unknown"
              },
              "tag": "istio.canonical_service"
            },
            {
              "literal": {
                "value": "csm-71lqh55c"
              },
              "tag": "istio.mesh_id"
            },
            {
              "literal": {
                "value": "develop"
              },
              "tag": "istio.namespace"
            },
            {
              "literal": {
                "value": "mesh"
              },
              "tag": "gotok8s_env"
            }
          ],
          "overall_sampling": {
            "value": 100
          },
          "provider": {
            "name": "envoy.tracers.opentelemetry",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig",
              "grpc_service": {
                "envoy_grpc": {
                  "authority": "otel-trace.dev.com",
                  "cluster_name": "outbound|4317||otel-trace.dev.com"
                }
              },
              "service_name": "test-service-grid-d.develop"
            }
          },
          "random_sampling": {
            "value": 100
          }
        },
        "upgrade_configs": [
          {
            "upgrade_type": "websocket"
          }
        ],
        "use_remote_address": false
      }
    }
  ],
  "name": "0.0.0.0_8080",
  "transport_socket": {
    "name": "envoy.transport_sockets.tls",
    "typed_config": {
      "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
      "common_tls_context": {
        "alpn_protocols": [
          "h2",
          "http/1.1"
        ],
        "combined_validation_context": {
          "default_validation_context": {
            "match_subject_alt_names": [
              {
                "prefix": "spiffe://cluster.local/"
              }
            ]
          },
          "validation_context_sds_secret_config": {
            "name": "ROOTCA",
            "sds_config": {
              "api_config_source": {
                "api_type": "GRPC",
                "grpc_services": [
                  {
                    "envoy_grpc": {
                      "cluster_name": "sds-grpc"
                    }
                  }
                ],
                "set_node_on_first_message_only": true,
                "transport_api_version": "V3"
              },
              "initial_fetch_timeout": "0s",
              "resource_api_version": "V3"
            }
          }
        },
        "tls_certificate_sds_secret_configs": [
          {
            "name": "default",
            "sds_config": {
              "api_config_source": {
                "api_type": "GRPC",
                "grpc_services": [
                  {
                    "envoy_grpc": {
                      "cluster_name": "sds-grpc"
                    }
                  }
                ],
                "set_node_on_first_message_only": true,
                "transport_api_version": "V3"
              },
              "initial_fetch_timeout": "0s",
              "resource_api_version": "V3"
            }
          }
        ],
        "tls_params": {
          "cipher_suites": [
            "ECDHE-ECDSA-AES256-GCM-SHA384",
            "ECDHE-RSA-AES256-GCM-SHA384",
            "ECDHE-ECDSA-AES128-GCM-SHA256",
            "ECDHE-RSA-AES128-GCM-SHA256",
            "AES256-GCM-SHA384",
            "AES128-GCM-SHA256"
          ],
          "tls_maximum_protocol_version": "TLSv1_3",
          "tls_minimum_protocol_version": "TLSv1_2"
        }
      },
      "require_client_certificate": true
    }
  }
}